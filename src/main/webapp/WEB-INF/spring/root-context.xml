<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- <context:property-placeholder location="classpath:config/**/*config.properties"/> -->
	
    <!-- Jasypt -->
    <bean id="encryptorConfig" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
        <property name="algorithm" value="PBEWITHMD5ANDDES" />
        <property name="password" value="k2webtech!!!$" /> <!-- DEV -->
        <!-- <property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD" /> -->
        <!-- <property name="password" value="taegu_babo_zz" /> -->  <!-- PROD -->
    </bean>
    <bean id="encryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="config" ref="encryptorConfig"></property>
    </bean>
    <bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
        <constructor-arg ref="encryptor" />
            <property name="locations">
                <list>
                    <value>classpath:/config/**/*config.properties</value>
                </list>
            </property>
    </bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<!-- <constructor-arg ref="hikariConfig"/> -->
		<constructor-arg>
			<bean class="com.zaxxer.hikari.HikariConfig">
				<constructor-arg>
					<props>
						<prop key="jdbcUrl">${db.url}</prop>
						<prop key="username">${db.userName}</prop>
						<prop key="password">${db.password}</prop>
					</props>
				</constructor-arg>
				<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
				<property name="minimumIdle" value="30" />
				<property name="maximumPoolSize" value="30" />
			</bean>
		</constructor-arg>
	</bean>
	 	
	<!-- 트랜젝션 매니저 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- @Transactional 애노테이션을 scan하기 위한 설정 -->
	<tx:annotation-driven/>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<context:component-scan base-package="ict.egovgo.dao"></context:component-scan>
	<context:component-scan base-package="ict.egovgo.service"></context:component-scan>
<!-- 	<context:component-scan base-package="org.hrd.aop"></context:component-scan>
	<context:component-scan base-package="org.hrd.util"></context:component-scan> -->
	
</beans>
